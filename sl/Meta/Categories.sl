system.categoryDictionary.categorizeDictionary('type', (
	'Kernel-Behaviour': [
		'Procedure'
	],
	'Kernel-Exception': [
		'Error'
	],
	'Kernel-Logic': [
		'Boolean'
	],
	'Kernel-Object': [
		'Nil'
		'Void'
	],
	'Kernel-System': [
		'System'
	],
	'Collection-Kernel': [
		'Array'
		'Record'
	],
	'Collection-Arrayed': [
		'ArrayBuffer'
		'ByteArray'
		'Float64Array'
		'SortedArray'
	],
	'Collection-Ordered': [
		'Heap'
		'Interval'
		'PriorityQueue'
	],
	'Collection-Stream': [
		'ReadStream'
		'WriteStream'
	],
	'Collection-Unordered': [
		'Association'
		'Bag'
		'CategoryDictionary'
		'Graph'
		'Map'
		'Set'
		'WeakMap'
	],
	'Number-Kernel': [
		'SmallFloat'
	],
	'Number': [
		'Complex'
		'Fraction'
		'LargeInteger'
	],
	'System': [
		'Blob'
		'File'
		'LibraryItem'
		'Response'
		'Storage'
		'URL'
		'URLSearchParams'
		'Window'
	],
	'System-Reflection': [
		'Method'
		'MethodInformation'
		'Trait'
		'Type'
	],
	'System-Scheduling': [
		'Promise'
	],
	'Text-Kernel': [
		'String'
	],
	'Text': [
		'Character'
		'RegExp'
		'Transcript'
	],
	'Time': [
		'Clock'
		'Date'
		'Duration'
		'TimeStamp'
	],
	'Geometry': [
		'Matrix22'
		'Matrix33'
		'PolarPoint'
		'Projection3'
		'Rectangle'
		'Vector2'
		'Vector3'
		'Vector4'
	],
	'Graphics': [
		'Colour'
	],
	'Data-Chemistry': [
		'CrystalLatticeStructure'
	],
	'Music-Tuning': [
		'JiTuning'
	],
	'Sound-OpenSoundControl': [
		'OscBundle'
		'OscMessage'
		'OscParameter'
	],
	'Sound-SuperCollider': [
		'CcEvent'
		'Env'
		'LocalControl'
		'ScSynth'
		'ScSynthOptions'
		'ScUgen'
		'Ugen'
		'UgenGraph'
	],
	'SmallKansas': [
		'ColourChooser'
		'ColumnBrowser'
		'AnalogueClock'
		'Frame'
		'HelpSystem'
		'Inspector'
		'ListChooser'
		'Menu'
		'MenuItem'
		'PngViewer'
		'SmallKansas'
		'SvgViewer'
		'TableViewer'
		'TextEditor'
		'TranscriptViewer'
	],
	'Navigator': [
		'Location'
		'Navigator'
	],
	'Navigator-Node': [
		'Attr'
		'NamedNodeMap'
		'NodeList'
		'Range'
		'Selection'
		'Text'
	],
	'Navigator-Canvas': [
		'CanvasGradient'
		'CanvasPattern'
		'CanvasRenderingContext2D'
		'OffscreenCanvas'
		'OffscreenCanvasRenderingContext2D'
		'Path2D'
	],
	'Navigator-Css': [
		'CSSStyleDeclaration'
		'CSS2Properties'
	],
	'Navigator-Dom': [
		'DOMMatrix'
		'DOMMatrixReadOnly'
		'DOMParser'
		'DOMPoint'
		'DOMPointReadOnly'
		'DOMRect'
		'DOMTokenList'
	],
	'Navigator-Event': [
		'CustomEvent'
		'Event'
		'KeyboardEvent'
		'MouseEvent'
		'PointerEvent'
	],
	'Navigator-Html': [
		'HTMLBodyElement'
		'HTMLButtonElement'
		'HTMLCanvasElement'
		'HTMLCollection'
		'HTMLDialogElement'
		'HTMLDivElement'
		'HTMLDocument'
		'HTMLElement'
		'HTMLHeadingElement'
		'HTMLImageElement'
		'HTMLInputElement'
		'HTMLLIElement'
		'HTMLOptionElement'
		'HTMLOptionsCollection'
		'HTMLParagraphElement'
		'HTMLPreElement'
		'HTMLSelectElement'
		'HTMLSpanElement'
		'HTMLTableCellElement'
		'HTMLTableColElement'
		'HTMLTableElement'
		'HTMLTableRowElement'
		'HTMLTableSectionElement'
		'HTMLTextAreaElement'
		'HTMLUListElement'
	],
	'Navigator-Image': [
		'ImageBitmap'
		'ImageData'
	],
	'Navigator-Media': [
		'MediaSource'
	],
	'Navigator-Midi': [
		'MIDIAccess'
		'MIDIConnectionEvent'
		'MIDIInput'
		'MIDIInputMap'
		'MIDIMessageEvent'
		'MIDIOutput'
		'MIDIOutputMap'
	],
	'Navigator-Svg': [
		'SVGCircleElement'
		'SVGGElement'
		'SVGLineElement'
		'SVGPathElement'
		'SVGPointList'
		'SVGPolygonElement'
		'SVGPolylineElement'
		'SVGRectElement'
		'SVGSVGElement'
		'SVGTextElement'
		'SVGTextPathElement'
		'SVGTitleElement'
		'SVGTransform'
		'SVGTransformList'
	],
	'Navigator-WebGl': [
		'WebGLRenderingContext'
	],
	'Navigator-Xml': [
		'XMLDocument'
	]
));

(* method categories *)
system.categoryDictionary.categorizeDictionary('method', { :each | each.asMethodName }, (
	'accessing': [
		'allButFirst'
		'allButFirstAndLast'
		'allButLast'
		'any'
		'anyAs'
		'anyOne'
		'asciiValue'
		'associationAt'
		'associationAtIfAbsent'
		'associations'
		'associationsRemove'
		'associationsSelect'
		'at'
		'atAll'
		'atAllPut'
		'atAllPutAll'
		'atIfAbsent'
		'atIfAbsentPut'
		'atIfPresent'
		'atIfPresentIfAbsent'
		'atIfPresentIfAbsentPut'
		'atIncrementBy'
		'atLastPut'
		'atModify'
		'atPath'
		'atPathPut'
		'atPin'
		'atPut'
		'atRandom'
		'atRandomBy'
		'atWrap'
		'atWrapPut'
		'basicAt'
		'basicAtPut'
		'basicNext'
		'binary'
		'byteSize'
		'cached'
		'capacity'
		'codePoint'
		'contents'
		'cumulativeCounts'
		'degrees'
		'digitValue'
		'domain'
		'domainDictionary'
		'domains'
		'entries'
		'first'
		'fromToPut'
		'imaginary'
		'in'
		'indexOf'
		'indexOfIfAbsent'
		'indexOfStartingAt'
		'indexOfSubCollection'
		'indexOfSubCollectionStartingAt'
		'indexOfSubCollectionStartingAtIfAbsent'
		'indexValueAssociations'
		'indices'
		'indicesOfSubCollection'
		'indicesSorted'
		'key'
		'keyAtValue'
		'keyAtValueIfAbsent'
		'keyValue'
		'keys'
		'keysInOrder'
		'keysSorted'
		'last'
		'lastIndexOf'
		'lastIndexOfIfAbsent'
		'lastIndexOfStartingAt'
		'lastIndexOfStartingAtIfAbsent'
		'messages'
		'middle'
		'name'
		'next'
		'nextInto'
		'nextIntoStartingAt'
		'nextPut'
		'nextPutAll'
		'nextSatisfy'
		'numArgs'
		'peek'
		'peekPriority'
		'radians'
		'real'
		'replaceFromToWith'
		'replaceFromToWithStartingAt'
		'second'
		'second'
		'secondLast'
		'setContents'
		'size'
		'slotNameArray'
		'sortBlock'
		'sortedCounts'
		'sortedElements'
		'string'
		'swapWith'
		'take'
		'third'
		'thirdLast'
		'top'
		'upToEnd'
		'upToPosition'
		'unlines'
		'values'
		'valuesAndCounts'
		'w'
		'x'
		'xy'
		'xyz'
		'y'
		'z'
	],
	'accessing-system': [
		'allMethods'
		'cache'
		'categoryDictionary'
		'library'
		'methodDictionary'
		'traitDictionary'
	],
	'accessing-graph': [
		'degree'
		'edgeLabels'
		'edges'
		'labeledVertices'
		'vertexLabels'
		'vertices'
	],
	'accessing-transcript': [
		'errorMessages'
		'notificationMessages'
		'warningMessages'
	],
	'accessing-string': [
		'codePointAt'
		'findString'
		'findStringStartingAt'
	],
	'accessing-date': [
		'dayOfMonth'
		'dayOfWeek'
		'julianYears'
		'hour'
		'month'
		'week'
		'year'
	],
	'accessing-time': [
		'centiseconds'
		'days'
		'hertz'
		'hours'
		'kilohertz'
		'lightYears'
		'milliseconds'
		'minutes'
		'offsetSeconds'
		'seconds'
		'siderealMonths'
		'siderealYears'
		'solarMonths'
		'solarYears'
		'synodicMonths'
		'systemTimeInMilliseconds'
		'systemTimeInSeconds'
		'unixTime'
		'unixTimeInMilliseconds'
		'weeks'
	],
	'adding': [
		'add'
		'addAfter'
		'addAfterIndex'
		'addAllFirst'
		'addAllLast'
		'addArrayFirst'
		'addArrayLast'
		'addBefore'
		'addAll'
		'addAllFirstTo'
		'addAllIfNotPresent'
		'addIfNotPresent'
		'addWithOccurrences'
		'addFirst'
		'addLast'
		'ifAbsentAdd'
		'include'
		'includeAll'
		'push'
		'pushAll'
	],
	'adding-transcript': [
		'addError'
		'addNotification'
		'addWarning'
	],
	'arithmetic operators': [
		'%' (* modulo *)
		'*' (* times *)
		'^' (* raisedTo *)
		'+' (* plus *)
		'-' (* minus *)
		'/' (* dividedBy *)
		'//'
		'\\\\'
		'*='
		'+='
		'/='
		'-='
	],
	'bit manipulation': [
		'<<'
		'>>'
		'bitAnd'
		'bitAt'
		'bitCount'
		'bitCountOfByte'
		'bitNot'
		'bitOr'
		'bitShift'
		'bitShiftLeft'
		'bitShiftRight'
		'bitTest'
		'bitXor'
		'highBit'
		'highBitOfByte'
		'highBitOfMagnitude'
		'highBitOfPositiveReceiver'
		'lowBit'
	],
	'classifying': [
		'categoriesOf'
		'categorize'
		'categorizeAll'
		'categorizeDictionary'
		'category'
		'categoryOf'
	],
	'comparing': [
		'!~'
		'<' (* lessThan *)
		'<='
		'<=>'
		'<~'
		'=' (* equals *)
		'=='
		'>' (* greaterThan *)
		'>='
		'>~'
		'~' (* tilde *)
		'~='
		'~~'
		'betweenAnd'
		'closeTo'
		'closeToBy'
		'crc16'
		'equalsBy'
		'exclusivelyBetweenAnd'
		'hasEqualElements'
		'hasEqualElementsBy'
		'inclusivelyBetweenAnd'
		'inRangeOfAnd'
		'sameAs'
		'veryCloseTo'
	],
	'controlling': [
		'?'
		'??'
		'~?'
		'always'
		'caseOf'
		'caseOfOtherwise'
		'if'
		'ifEmpty'
		'ifEmptyIfNotEmptyDo'
		'ifFalse'
		'ifNil'
		'ifNotNil'
		'ifNotEmpty'
		'ifNotEmptyDo'
		'ifTrue'
		'repeat'
		'whileTrue'
		'whileFalse'
		'doWhile'
		'doWhileTrue'
		'doWhileFalse'
	],
	'converting': [
		'adaptToCollectionAndApply'
		'adaptToComplexAndApply'
		'adaptToFractionAndApply'
		'adaptToNumberAndApply'
		'adaptToPointAndApply'
		'asArray'
		'asAscii'
		'asBag'
		'asBit'
		'asCollection'
		'asComplex'
		'asFraction'
		'asHex'
		'asHexDigit'
		'asInteger'
		'asLowercase'
		'asNumber'
		'asPoint'
		'asRegExp'
		'asSeconds'
		'asSet'
		'asTimeStamp'
		'asUppercase'
		'asUrl'
		'capitalized'
		'concatenation'
		'flattened'
		'histogramOf'
		'i'
		'iso8601'
		'join'
		'joinCharacters'
		'joinSeparatedBy'
		'joinStringsSeparatedBy'
		'localeTimeString'
		'radiansToDegrees'
		'degreesToRadians'
		'reverse'
		'romanNumber'
		'threeDigitName'
	],
	'converting-system': [
		'asMethodName'
		'categoryNameParts'
	],
	'converting-string': [
		'ascii'
		'asciiByteArray'
		'characterArray'
		'codePointArray'
		'contractTo'
		'lines'
		'paragraphs'
		'stringArray'
		'toLowercase'
		'toUppercase'
		'utf8ByteArray'
		'utf16Array'
		'utf16CodePointAt'
		'withBlanksTrimmed'
		'withoutLeadingBlanks'
		'withoutTrailingBlanks'
		'words'
	],
	'copying': [
		'++'
		'appendString'
		'copy'
		'copyAfterLast'
		'copyAfter'
		'copyEmpty'
		'copyFromTo'
		'copyReplaceAllWith'
		'copyReplaceFromToWith'
		'copyWith'
		'copyWithFirst'
		'copyWithoutFirst'
		'copyWithout'
		'copyWithoutAll'
		'deepCopy'
		'forceToPaddingWith'
		'grownBy'
		'paddedToWith'
		'padLeft'
		'padRight'
		'postCopy'
		'reversed'
		'reversed'
		'shallowCopy'
		'veryDeepCopy'
		'withoutDuplicates'
	],
	'delegating': [
		'atDelegateTo'
		'atDelegateToIfAbsent'
		'atPutDelegateTo'
		'atPutDelegateToIfAbsent'
		'messageSend'
	],
	'encoding and decoding': [
		'base64Decoded'
		'encode'
	],
	'enumerating': [
		'allButFirstDo'
		'allButLastDo'
		'associationsDo'
		'collect'
		'collectAs'
		'collectFromTo'
		'collectInto'
		'collectThenDo'
		'collectThenSelect'
		'combinationsAtATimeDo'
		'count'
		'countAll'
		'detect'
		'detectIfFound'
		'detectIfFoundIfNone'
		'detectIfNone'
		'detectIndex'
		'detectMax'
		'detectMin'
		'detectSum'
		'do'
		'doSeparatedBy'
		'doWithout'
		'findFirst'
		'findFirstElement'
		'findLast'
		'foldLeft'
		'foldRight'
		'fromToDo'
		'groupBy'
		'groupsDo'
		'indicesDo'
		'injectInto'
		'keysAndValuesDo'
		'keysDo'
		'map'
		'occurrencesOf'
		'pairsDo'
		'pairsCollect'
		'permutations'
		'permutationsDo'
		'reduce'
		'reject'
		'rejectThenDo'
		'replace'
		'reverseDo'
		'reverseWithDo'
		'select'
		'selectThenCollect'
		'selectThenDo'
		'split'
		'splitBy'
		'timesRepeat'
		'upOrDownToDo'
		'valuesDo'
		'withCollect'
		'withDo'
		'withIndexCollect'
		'withIndexDo'
		'withReplace'
	],
	'enumerating-string': [
		'countCharacters'
		'countUtf16CodeUnits'
	],
	'error handling': [
		'assert'
		'assertIsCollection'
		'assertIsSmallInteger'
		'assertIsOfSize'
		'caseError'
		'emptyCheck'
		'error'
		'errorEmptyCollection'
		'errorInvalidIndex'
		'errorNotFound'
		'errorNotIndexed'
		'isOfSameSizeCheck'
		'shouldBeImplemented'
		'shouldNotImplement'
		'signal'
		'typeResponsibility'
		'warning'
	],
	'evaluating': [
		'cull'
		'evaluateOrSignalError'
		'evaluateNotifying'
		'evaluate'
		'ifError'
		'value'
		'valueWithArguments'
		'valueWithReturn'
	],
	'instance creation': [
		'instanceOf'
		'Array'
		'ArrayBuffer'
		'Association'
		'Bag'
		'Bitset'
		'ByteArray'
		'Character'
		'Complex'
		'Date'
		'Duration'
		'Error'
		'Float64Array'
		'Fraction'
		'Frequency'
		'Heap'
		'Interval'
		'LargeInteger'
		'LinkedList'
		'Map'
		'PriorityQueue'
		'Promise'
		'Random'
		'ReadStream'
		'Record'
		'RegExp'
		'RunArray'
		'Set'
		'SortedArray'
		'Stack'
		'String'
		'TimeStamp'
		'Transcript'
		'WeakMap'
		'WriteStream'
		'new'
		'ofSize'
		'species'
	],
	'instance creation-number': [
		'one'
		'zero'
	],
	'intervals': [
		'downToDo'
		'thenTo'
		'toDo'
		'toByDo'
		'to'
		'toBy'
		'upTo'
		'downTo'
		'upOrDownTo'
		'upToDo'
	],
	'loading': [
		'loadFile'
		'loadUrl'
	],
	'logic operator': [
		'&&'
		'&'
		'not'
		'|'
		'||'
		'==>'
		'xor'
	],
	'matching': [
		'allRegExpMatches'
		'matchesRegExp'
		'splitRegExp'
	],
	'mathematical functions': [
		'abs'
		'abs'
		'absSquared'
		'arcCos'
		'arcSin'
		'arcTan'
		'arg'
		'atan2'
		'average'
		'conjugated'
		'cos'
		'cosh'
		'cubeRoot'
		'cubed'
		'degreeCos'
		'degreeSin'
		'denominator'
		'exp'
		'gcd'
		'halved'
		'lcm'
		'log'
		'log10'
		'log2'
		'max'
		'maxBy'
		'mean'
		'min'
		'minBy'
		'minMax'
		'negated'
		'negative'
		'normalize'
		'numerator'
		'pow'
		'product'
		'quotient'
		'quotientBy'
		'raisedToInteger'
		'range'
		'reciprocal'
		'remainder'
		'remainderBy'
		'signBit'
		'sin'
		'sinh'
		'sqrt'
		'squared'
		'squaredNorm'
		'sum'
		'tan'
		'tanh'
		'twice'
	],
	'message handling': [
		'perform'
	],
	'parsing': [
		'parseBacktickQuotedString'
		'parseDoubleQuotedString'
		'parseFraction'
		'parseHexColour'
		'parseHexString'
		'parseInteger'
		'parseJson'
		'parseLargeInteger'
		'parseMethodSignature'
		'parseQualifiedMethodName'
		'parseQualifiedTraitName'
		'parseNumber'
	],
	'positioning': [
		'backUpTo'
		'position'
		'pushBack'
		'reset'
		'resetToStart'
		'setToEnd'
		'skip'
		'skipTo'
	],
	'prime numbers': [
		'isCoprime'
		'nextPrime'
		'nthPrime'
		'primeFactorization'
		'primeFactors'
		'primeLimit'
		'primesArray'
		'primesArrayExtend'
		'primesUpTo'
		'primesUpToDo'
	],
	'printing': [
		'asString'
		'asStringWithCommas'
		'asWords'
		'description'
		'hex'
		'messageText'
		'postLine'
		'printString'
		'printStringConcise'
		'printStringHex'
		'printStringLimitedTo'
		'printStringRoman'
		'storeString'
	],
	'private': [
		'fillFromWith'
		'indexForInserting'
		'initializeSlots'
		'pseudoSlotNameArray'
		'reduced'
		'unsafeRecord'
	],
	'random': [
		'randomFloat'
		'randomInteger'
	],
	'removing': [
		'keysAndValuesRemove'
		'pop'
		'remove'
		'removeAll'
		'removeAllAndShrink'
		'removeAllFoundIn'
		'removeAllSuchThat'
		'removeAssociation'
		'removeAt'
		'removeFirst'
		'removeIfAbsent'
		'removeKey'
		'removeKeyIfAbsent'
		'removeLast'
	],
	'scheduling': [
		'allResolved'
		'allSettled'
		'anyResolved'
		'anySettled'
		'cancel'
		'schedule'
		'scheduleInjecting'
		'valueAfter'
		'valueAfterMilliseconds'
		'valueAfterMillisecondsWith'
		'valueAfterWith'
		'valueAt'
		'valueAtWith'
		'valueEvery'
		'valueEveryMilliseconds'
		'schedule'
		'scheduleInjecting'
		'then'
		'thenElse'
	],
	'serialization': [
		'json'
	],
	'set logic': [
		'difference'
		'intersection'
		'symmetricDifference'
		'union'
	],
	'shuffling': [
		'fisherYatesShuffle'
		'fisherYatesShuffleBy'
		'shuffle'
		'shuffleBy'
		'shuffled'
		'shuffledBy'
	],
	'sorting': [
		'sortBy'
		'sorted'
		'sort'
		'withKeysSorted'
	],
	'testing': [
		'hasDomain'
		'isBinary'
		'isCategorized'
		'isCategoryName'
		'isCollection'
		'isError'
		'isIndexable'
		'isLiteral'
		'isNil'
		'isNumber'
		'isStream'
		'isVowel'
	],
	'testing-system': [
		'isMethodName'
		'isOperatorName'
		'isQualifiedTraitName'
		'isTraitName'
		'isTraitOrTypeName'
		'isTypeName'
		'operatorMethodName'
	],
	'testing-stream': [
		'atEnd'
	],
	'testing-collection': [
		'allEqual'
		'allEqualBy'
		'allSatisfy'
		'anySatisfy'
		'contains'
		'doesNotInclude'
		'includes'
		'includesAllOf'
		'includesAnyOf'
		'includesAssociation'
		'includesIdentity'
		'includesIndex'
		'includesKey'
		'isDictionary'
		'isEmpty'
		'isEmptyOrNil'
		'isSequenceable'
		'noneSatisfy'
		'notEmpty'
		'oneSatisfies'
	],
	'testing-sequenceable': [
		'beginsWith'
		'beginsWithAnyOf'
		'endsWith'
		'endsWithAnyOf'
		'isOctetSequence'
		'isSeries'
		'isSeriesBy'
		'isSorted'
		'isSortedBetweenAnd'
		'isSortedBy'
		'isSortedByBetweenAnd'
	],
	'testing-number': [
		'clamp'
		'clampHigh'
		'clampLow'
		'even'
		'isByte'
		'isFinite'
		'isGaussianInteger'
		'isInteger'
		'isNaN'
		'isNegative'
		'isPositive'
		'isPowerOfTwo'
		'isPrime'
		'isSmallInteger'
		'isStrictlyPositive'
		'isZero'
		'odd'
		'positive'
		'sign'
		'strictlyPositive'
	],
	'testing-string': [
		'includesSubstring'
		'isUtf16SurrogateCode'
		'isAscii'
		'isAsciiCodePoint'
		'isAsciiString'
		'isAllDigits'
		'isInBasicMultilingualPlane'
		'isLowercase'
		'isSingleCharacter'
		'isUppercase'
		'isWellFormed'
	],
	'testing-colour': [
		'isBlack'
		'isBlue'
		'isCyan'
		'isGreen'
		'isMagenta'
		'isOpaque'
		'isRed'
		'isTransparent'
		'isWhite'
		'isYellow'
		'isGrey'
		'isGreyOf'
	],
	'timing': [
		'millisecondsToRun'
	],
	'timing-benchmark': [
		'benchFor'
		'benchForMilliseconds'
	],
	'truncating and rounding': [
		'asLargerPowerOfTwo'
		'asPowerOfTwo'
		'asSmallerPowerOfTwo'
		'ceiling'
		'floor'
		'fractionPart'
		'previousPowerOf'
		'nextPowerOf'
		'nextPowerOfTwo'
		'rounded'
		'roundDownTo'
		'roundDown'
		'roundTo'
		'roundToTowardsZero'
		'roundTowardsZero'
		'roundUpTo'
		'roundUp'
		'truncated'
		'truncateTo'
	],
	'type predicate': [
		'isArray'
		'isArrayBuffer'
		'isAssociation'
		'isBag'
		'isBitset'
		'isBoolean'
		'isByteArray'
		'isCategoryDictionary'
		'isCharacter'
		'isColour'
		'isComplex'
		'isDate'
		'isDuration'
		'isFile'
		'isFloat64Array'
		'isFraction'
		'isFrequency'
		'isGraph'
		'isHeap'
		'isInterval'
		'isLargeInteger'
		'isLibraryItem'
		'isLinkedList'
		'isMap'
		'isMethod'
		'isPriorityQueue'
		'isProcedure'
		'isPromise'
		'isRandom'
		'isReadStream'
		'isRecord'
		'isRegExp'
		'isResponse'
		'isRunArray'
		'isSet'
		'isSmallFloat'
		'isSortedArray'
		'isStack'
		'isString'
		'isSystem'
		'isTimeStamp'
		'isTranscript'
		'isTrait'
		'isWeakMap'
		'isWriteStream'
	],
	'type predicate-super collider': [
		'isCcEvent'
		'isEnv'
		'isLocalControl'
		'isScSynth'
		'isScSynthOptions'
		'isScUgen'
		'isUgen'
		'isUgenGraph'
	],
	'type predicate-open sound control': [
		'isOscMessage'
		'isOscParameter'
	],
	'accessing-colour': [
		'alpha'
		'blue'
		'green'
		'red'
	],
	'converting-colour': [
		'asNontranslucentColor'
		'fromSrgb'
		'hexString'
		'toSrgb'
	],
	'mathematical functions-colour': [
		'over'
	],
	'super collider': [
		'allTuples'
		'allTuplesDo'
		'asLocalBuf'
		'bang'
		'bangPlus'
		'bangRaisedTo'
		'coin'
		'collectTexture'
		'crossedMultiply'
		'differentiate'
		'dup'
		'geom'
		'lessThanBang'
		'overlap'
		'play'
		'playEvery'
		'pyramid'
		'repeatEvery'
		'series'
		'withCrossedCollect'
		'withTableCollect'
		'xfade'
	],
	'unit generator': [
		'Abs'
		'Add'
		'Adsr'
		'AllpassC'
		'AllpassL'
		'AllpassN'
		'AmClip'
		'AmpComp'
		'AmpCompA'
		'AmpDb'
		'Amplitude'
		'AnalogFoldOsc'
		'ArcCos'
		'ArcSin'
		'ArcTan'
		'Asr'
		'Atan2'
		'AudioIn'
		'AudioOut'
		'Balance2'
		'BBandPass'
		'BBandStop'
		'Bezier'
		'BHiPass'
		'BHiPass4'
		'BitAnd'
		'BitOr'
		'Blip'
		'BlockSize'
		'BLowPass'
		'BLowPass4'
		'BPeakEq'
		'Bpf'
		'Bpz2'
		'Brf'
		'BrownNoise'
		'Brz2'
		'BufAlloc'
		'BufClear'
		'BufDur'
		'BufFrames'
		'BufRateScale'
		'BufRd'
		'BufRec'
		'BufSampleRate'
		'BufWr'
		'BufWrite'
		'Ceil'
		'Changed'
		'ClearBuf'
		'Clip'
		'Clip2'
		'ClipNoise'
		'Clock'
		'CoinGate'
		'CombC'
		'CombL'
		'CombN'
		'Compander'
		'ControlDur'
		'ControlIn'
		'ControlOut'
		'ControlRate'
		'Convolution'
		'Cos'
		'Cosh'
		'CpsMidi'
		'CpsOct'
		'Crackle'
		'CrossoverDistortion'
		'Cubed'
		'CuspL'
		'CuspN'
		'Cutoff'
		'DbAmp'
		'Dbrown'
		'Dbrowni'
		'Dbufrd'
		'Dbufwr'
		'Dc'
		'Decay'
		'Decay2'
		'DegreeToKey'
		'Delay1'
		'Delay2'
		'DelayC'
		'DelayL'
		'DelayN'
		'DelayTap'
		'DelayWrite'
		'Demand'
		'DetectSilence'
		'Dfm1'
		'Dibrown'
		'Distort'
		'Diwhite'
		'DmdFor'
		'DmdOn'
		'Drand'
		'Dseq'
		'Dser'
		'Dseries'
		'Dshuf'
		'Dswitch'
		'Dswitch1'
		'Dust'
		'Dust2'
		'DustRange'
		'Duty'
		'DwgPluckedStiff'
		'Dwhite'
		'Dwrand'
		'Dx7'
		'Dx7Env'
		'Dxrand'
		'DynRingzBank'
		'Env'
		'EnvBreakPoint'
		'EnvGen'
		'EqPan2'
		'Exp'
		'ExpRand'
		'ExpRandN'
		'ExpRandRange'
		'ExpRange'
		'FbSineC'
		'FbSineL'
		'Fdiv'
		'Fft'
		'FirstArg'
		'Floor'
		'Fm7'
		'Fold'
		'Fold2'
		'Formant'
		'Formlet'
		'Fos'
		'FOS'
		'Frac'
		'FreeVerb'
		'FreeVerb2'
		'Freezer'
		'FreqShift'
		'Friction'
		'FSinOsc'
		'Gate'
		'Gcd'
		'Ge'
		'Gendy1'
		'GetTempo'
		'GrainBuf'
		'GrainFm'
		'GrainSin'
		'GrayNoise'
		'GreyholeRaw'
		'Gt'
		'GVerb'
		'Hasher'
		'HenonC'
		'HenonL'
		'HenonN'
		'Hpf'
		'Hpz1'
		'Hpz2'
		'Hypot'
		'Idiv'
		'Ifft'
		'Impulse'
		'ImpulseSequencer'
		'In'
		'Index'
		'IndexInBetween'
		'InFb'
		'InFeedback'
		'InRange'
		'Integrator'
		'IRand'
		'K2A'
		'KeyState'
		'Klang'
		'Klank'
		'Lag'
		'Lag2'
		'Lag3'
		'Lag3Ud'
		'LagUd'
		'Latch'
		'LatoocarfianC'
		'Lcm'
		'Le'
		'LeakDc'
		'LfBrownNoise1'
		'LfClipNoise'
		'LfCub'
		'LfdClipNoise'
		'LfdNoise0'
		'LfdNoise1'
		'LfdNoise3'
		'LfGauss'
		'LfNoise0'
		'LfNoise1'
		'LfNoise2'
		'LfPar'
		'LfPulse'
		'LfSaw'
		'LfTri'
		'Limiter'
		'LinCongC'
		'Line'
		'Linen'
		'LinExp'
		'LinLin'
		'LinPan2'
		'LinRand'
		'LinRandN'
		'LinSeg'
		'LinXFade2'
		'Ln'
		'LocalBuf'
		'LocalIn'
		'LocalOut'
		'Log'
		'Log10'
		'Log2'
		'Logistic'
		'LorenzL'
		'Lpf'
		'Lpz1'
		'Lpz2'
		'Lt'
		'MantissaMask'
		'Max'
		'MaxLocalBufs'
		'Median'
		'MembraneCircle'
		'MiBraids'
		'MiClouds'
		'MidEq'
		'MidiCps'
		'MidiRatio'
		'Min'
		'MiRings'
		'Mix'
		'Mod'
		'ModDif'
		'MoogFf'
		'MoogLadder'
		'MouseButton'
		'MouseX'
		'MouseY'
		'Mul'
		'MulAdd'
		'MultiTapDelay'
		'Ne'
		'Neg'
		'Normalizer'
		'NRand'
		'NumOutputBuses'
		'ObxdFilter'
		'OctCps'
		'OnePole'
		'OneZero'
		'Osc'
		'Osc1'
		'OscMessage'
		'OscParameter'
		'Out'
		'OverlapTexture'
		'Pan2'
		'PanAz'
		'PanB'
		'PeakFollower'
		'Perc'
		'Perlin3'
		'Phasor'
		'PingPongDelay'
		'PinkNoise'
		'Pitch'
		'PitchShift'
		'PlayBuf'
		'Pluck'
		'PmOsc'
		'Pow'
		'Pulse'
		'PulseCount'
		'PulseDivider'
		'PvDiffuser'
		'PvRandComb'
		'QuadC'
		'QuadL'
		'Rand'
		'Rand2'
		'RandN'
		'RandRange'
		'Range'
		'RatioMidi'
		'Rcd'
		'Recip'
		'RecordBuf'
		'Release'
		'ReplaceOut'
		'Resonz'
		'Rhpf'
		'Ringz'
		'RingzBank'
		'Rlpf'
		'Rotate2'
		'RoundTo'
		'RunningMax'
		'RunningSum'
		'SampleDur'
		'SampleRate'
		'Sanitize'
		'Saw'
		'ScaleNeg'
		'Schmidt'
		'Scm'
		'ScSynth'
		'Select'
		'Select2'
		'SelectX'
		'Sequencer'
		'SetBuf'
		'SetResetFf'
		'SfAcquire'
		'SfDur'
		'SfFrames'
		'SfPlay'
		'SfRateScale'
		'SfRead'
		'SfSampleRate'
		'ShiftLeft'
		'ShiftRight'
		'Shuf'
		'Sign'
		'Silent'
		'Sin'
		'Sine'
		'SinGrain'
		'Sinh'
		'SinOsc'
		'SinOscBank'
		'SinOscFb'
		'Slew'
		'Slope'
		'SoftClip'
		'Sos'
		'Splay'
		'Splay2'
		'Spring'
		'Sqrt'
		'Squared'
		'StandardL'
		'StandardN'
		'Stepper'
		'Sub'
		'SvfBp'
		'SvfHp'
		'SvfLp'
		'Sweep'
		'SyncSaw'
		'Tan'
		'Tanh'
		'TChoose'
		'TDelay'
		'TDmdFor'
		'TDuty'
		'TExpRand'
		'TGrains'
		'Timer'
		'TiRand'
		'TLine'
		'TLinRand'
		'ToggleFf'
		'TRand'
		'Trig'
		'Trig1'
		'Trunc'
		'TScramble'
		'TwoPole'
		'TwoZero'
		'TxLine'
		'VarLag'
		'VarSaw'
		'VbJonVerb'
		'Vibrato'
		'Vosim'
		'Warp1'
		'WaveLoss'
		'WhiteNoise'
		'Wrap'
		'Wrap2'
		'WrapIndex'
		'XChoose'
		'XFade2'
		'XFadeTexture'
		'XLine'
		'XLn'
		'ZeroCrossing'
	]
))
