system.categorizeDictionary(
	(
		'Collections-Arrayed': [
			'Array',
			'ArrayBuffer',
			'ByteArray',
			'Float64Array',
			'SortedArray'
		],
		'Collections-Ordered': [
			'Interval',
			'PriorityQueue'
		],
		'Collections-Streams': [
			'ReadStream',
			'WriteStream'
		],
		'Collections-Unordered': [
			'Association',
			'Bag',
			'Graph',
			'Map',
			'Record',
			'Set',
			'WeakMap'
		],
		'Kernel-Logic': [
			'Boolean'
		],
		'Kernel-Objects': [
			'Nil',
			'Void'
		],
		'Kernel-Behaviour': [
			'Procedure',
			'Promise'
		],
		'Kernel-Exceptions': [
			'Error'
		],
		'Kernel-Chronology': [
			'Date',
			'Duration',
			'TimeStamp'
		],
		'Kernel-Numbers': [
			'Complex',
			'Fraction',
			'LargeInteger',
			'SmallFloat'
		],
		'Kernel-Text': [
			'Character',
			'RegExp',
			'String',
			'Transcript'
		],
		'Kernel-Geometry': [
			'Matrix22',
			'Matrix33',
			'PolarPoint',
			'Projection3',
			'Rectangle',
			'Vector2',
			'Vector3',
			'Vector4'
		],
		'Kernel-Graphics': [
			'Colour'
		],
		'Data-Chemistry': [
			'CrystalLatticeStructure'
		],
		'Music-Tuning': [
			'JiTuning'
		],
		'Sound-Osc': [
			'OscBundle',
			'OscMessage',
			'OscParameter'
		],
		'Sound-Sc': [
			'CcEvent',
			'Clock',
			'Env',
			'LocalControl',
			'ScSynth',
			'ScSynthOptions',
			'ScUgen',
			'Ugen',
			'UgenGraph'
		],
		'System': [
			'Blob',
			'File',
			'LibraryItem',
			'Method',
			'Response',
			'Storage',
			'System',
			'Trait',
			'Type',
			'URL',
			'URLSearchParams',
			'Window'
		],
		'SmallKansas': [
			'ColourChooser',
			'ColumnBrowser',
			'AnalogueClock',
			'Frame',
			'HelpSystem',
			'Inspector',
			'ListChooser',
			'Menu',
			'MenuItem',
			'PngViewer',
			'SmallKansas',
			'SvgViewer',
			'TableViewer',
			'TextEditor',
			'TranscriptViewer'
		],
		'Navigator': [
			'Location',
			'Navigator'
		],
		'Navigator-Node': [
			'Attr',
			'NamedNodeMap',
			'NodeList',
			'Range',
			'Selection',
			'Text'
		],
		'Navigator-Canvas': [
			'CanvasGradient',
			'CanvasPattern',
			'CanvasRenderingContext2D',
			'OffscreenCanvas',
			'OffscreenCanvasRenderingContext2D',
			'Path2D'
		],
		'Navigator-Css': [
			'CSSStyleDeclaration',
			'CSS2Properties'
		],
		'Navigator-Dom': [
			'DOMMatrix',
			'DOMMatrixReadOnly',
			'DOMParser',
			'DOMPoint',
			'DOMPointReadOnly',
			'DOMRect',
			'DOMTokenList'
		],
		'Navigator-Event': [
			'CustomEvent',
			'Event',
			'KeyboardEvent',
			'MouseEvent',
			'PointerEvent'
		],
		'Navigator-Html': [
			'HTMLBodyElement',
			'HTMLButtonElement',
			'HTMLCanvasElement',
			'HTMLCollection',
			'HTMLDialogElement',
			'HTMLDivElement',
			'HTMLDocument',
			'HTMLElement',
			'HTMLHeadingElement',
			'HTMLImageElement',
			'HTMLInputElement',
			'HTMLLIElement',
			'HTMLOptionElement',
			'HTMLOptionsCollection',
			'HTMLParagraphElement',
			'HTMLPreElement',
			'HTMLSelectElement',
			'HTMLSpanElement',
			'HTMLTableCellElement',
			'HTMLTableColElement',
			'HTMLTableElement',
			'HTMLTableRowElement',
			'HTMLTableSectionElement',
			'HTMLTextAreaElement',
			'HTMLUListElement'
		],
		'Navigator-Image': [
			'ImageBitmap',
			'ImageData'
		],
		'Navigator-Media': [
			'MediaSource'
		],
		'Navigator-Midi': [
			'MIDIAccess',
			'MIDIConnectionEvent',
			'MIDIInput',
			'MIDIInputMap',
			'MIDIMessageEvent',
			'MIDIOutput',
			'MIDIOutputMap'
		],
		'Navigator-Svg': [
			'SVGCircleElement',
			'SVGGElement',
			'SVGLineElement',
			'SVGPathElement',
			'SVGPointList',
			'SVGPolygonElement',
			'SVGPolylineElement',
			'SVGRectElement',
			'SVGSVGElement',
			'SVGTextElement',
			'SVGTextPathElement',
			'SVGTitleElement',
			'SVGTransform',
			'SVGTransformList'
		],
		'Navigator-WebGl': [
			'WebGLRenderingContext'
		],
		'Navigator-Xml': [
			'XMLDocument'
		]
	)
);

(* method categories *)
system.categorizeDictionary(
	(
		'accessing': [
			'allButFirst'
			'allButLast'
			'any'
			'anyOne'
			'asciiValue'
			'associationAt'
			'associations'
			'atAll'
			'atAllPutAll'
			'atAllPut'
			'at'
			'atIfAbsent'
			'atIfAbsentPut'
			'atIfPresent'
			'atModify'
			'atPath'
			'atPin'
			'atPut'
			'atRandom'
			'basicAt'
			'basicAtPut'
			'contents'
			'digitValue'
			'findFirst'
			'first'
			'imaginary'
			'indexOf'
			'indexOfIfAbsent'
			'indexOfSubCollectionStartingAt'
			'indexOfSubCollectionStartingAtIfAbsent'
			'indexValueAssociations'
			'indices'
			'in'
			'keyAtValue'
			'keyAtValueIfAbsent'
			'last'
			'lines'
			'middle'
			'next'
			'numArgs'
			'peek'
			'real'
			'replaceFromToWithStartingAt'
			'second'
			'size'
			'slotNameArray'
			'sortedCounts'
			'sortedElements'
			'take'
			'unlines'
		],
		'arithmetic': [
			'%'
			'*'
			'**'
			'+'
			'-'
			'/'
			'//'
			'\\\\'
			'abs'
			'absSquared'
			'denominator'
			'gcd'
			'lcm'
			'negated'
			'numerator'
			'quotient'
			'reciprocal'
			'remainder'
		],
		'bit manipulation': [
			'<<'
			'>>'
			'bitAnd'
			'bitAt'
			'bitCount'
			'bitCountOfByte'
			'bitNot'
			'bitOr'
			'bitShift'
			'bitShiftLeft'
			'bitShiftRight'
			'bitTest'
			'bitXor'
			'highBit'
			'highBitOfByte'
			'highBitOfMagnitude'
			'highBitOfPositiveReceiver'
			'lowBit'
		],
		'comparing': [
			'!~'
			'<'
			'<='
			'<=>'
			'<~'
			'='
			'=='
			'>'
			'>='
			'>~'
			'betweenAnd'
			'closeTo'
			'closeToBy'
			'crc16'
			'~'
			'~='
			'~~'
			'veryCloseTo'
		],
		'controlling': [
			'if'
			'ifEmpty'
			'ifFalse'
			'ifNil'
			'ifTrue'
			'whileTrue'
			'whileFalse'
		],
		'converting': [
			'adaptToCollectionAndApply'
			'adaptToComplexAndApply'
			'adaptToFractionAndApply'
			'adaptToNumberAndApply'
			'asAscii'
			'asBit'
			'asComplex'
			'asFraction'
			'asHexDigit'
			'asInteger'
			'asLowercase'
			'asNumber'
			'asPoint'
			'asSeconds'
			'asUppercase'
			'capitalized'
			'concatenation'
			'flattened'
			'histogramOf'
			'i'
			'radiansToDegrees'
			'degreesToRadians'
			'reverse'
			'romanNumber'
			'toArray'
		],
		'copying': [
			'++'
			'++'
			'copy'
			'copyFromTo'
			'copyReplaceAllWith'
			'copyReplaceFromToWith'
			'copyWith'
			'copyWithout'
			'copyWithoutAll'
			'deepCopy'
			'forceToPaddingWith'
			'reversed'
			'reversed'
			'shallowCopy'
			'shuffled'
			'veryDeepCopy'
			'withoutDuplicates'
		],
		'enumerating': [
			'associationsDo'
			'collect'
			'collectInto'
			'collectThenSelect'
			'count'
			'detect'
			'detectIfNone'
			'detectMax'
			'detectMin'
			'detectSum'
			'do'
			'doSeparatedBy'
			'fromToDo'
			'groupBy'
			'indicesDo'
			'injectInto'
			'intersection'
			'keysDo'
			'keysAndValuesDo'
			'map'
			'permutationsDo'
			'permutations'
			'reduce'
			'reject'
			'replace'
			'reverseDo'
			'reverseWithDo'
			'select'
			'selectThenCollect'
			'timesRepeat'
			'union'
			'valuesDo'
			'withCollect'
			'withDo'
			'withIndexCollect'
			'withIndexDo'
		],
		'error handling': [
			'error'
			'shouldNotImplement'
			'signal'
			'typeResponsibility'
			'warning'
		],
		'evaluating': [
			'cull'
			'ifError'
			'value'
			'valueWithArguments'
			'valueWithReturn'
		],
		'instance creation': [
			'new'
			'ofSize'
		],
		'intervals': [
			'toDo'
			'toByDo'
			'to'
			'toBy'
			'upTo'
			'downTo'
			'upOrDownTo'
		],
		'logic operator': [
			'&&'
			'&'
			'difference'
			'not'
			'|'
			'||'
			'==>'
			'xor'
		],
		'matching': [
			'allRegExpMatches'
			'matchesRegExp'
			'splitRegExp'
		],
		'mathematical functions': [
			'arcCos'
			'arcSin'
			'arcTan'
			'atan2'
			'cos'
			'cosh'
			'cubed'
			'cubeRoot'
			'degreeCos'
			'degreeSin'
			'halved'
			'sin'
			'sinh'
			'tan'
			'tanh'
			'log'
			'log2'
			'log10'
			'exp'
			'pow'
			'product'
			'sqrt'
			'squared'
			'sum'
			'twice'
		],
		'parsing': [
			'parseFraction'
			'parseLargeInteger'
		],
		'prime numbers': [
			'isCoprime'
			'nextPrime'
			'nthPrime'
			'primeFactorization'
			'primeFactors'
			'primeLimit'
			'primesArray'
			'primesArrayExtend'
			'primesUpTo'
			'primesUpToDo'
		],
		'printing': [
			'asString'
			'asStringWithCommas'
			'description'
			'messageText'
			'printString'
			'printStringConcise'
			'printStringHex'
			'printStringLimitedTo'
			'printStringRoman'
			'storeString'
		],
		'private': [
			'reduced'
		],
		'random': [
			'randomFloat'
			'randomInteger'
		],
		'sorting': [
			'isSortedBy'
			'isSorted'
			'sortBy'
			'sorted'
			'sort'
		],
		'testing': [
			'allSatisfy'
			'anySatisfy'
			'atEnd'
			'doesNotInclude'
			'even'
			'includes'
			'includesAllOf'
			'includesAnyOf'
			'includesIndex'
			'includesKey'
			'isAscii'
			'isBinary'
			'isByte'
			'isInteger'
			'isNumber'
			'isBoolean'
			'isCharacter'
			'isCollection'
			'isComplex'
			'isEmpty'
			'isError'
			'isFinite'
			'isFraction'
			'isIndexable'
			'isLargeInteger'
			'isMap'
			'isNaN'
			'isNil'
			'isPowerOfTwo'
			'isPrime'
			'isProcedure'
			'isPromise'
			'isRecord'
			'isRegExp'
			'isSequenceable'
			'isSmallInteger'
			'isWeakMap'
			'isZero'
			'max'
			'min'
			'minMax'
			'negative'
			'notEmpty'
			'occurrencesOf'
			'odd'
			'positive'
			'sign'
			'strictlyPositive'
		],
		'truncating and rounding': [
			'asLargerPowerOfTwo'
			'asPowerOfTwo'
			'asSmallerPowerOfTwo'
			'ceiling'
			'floor'
			'fractionPart'
			'rounded'
			'roundDownTo'
			'roundTo'
			'roundUpTo'
			'truncated'
			'truncateTo'
		]
	)
)
