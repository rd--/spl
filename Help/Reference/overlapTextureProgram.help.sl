# overlapTextureProgram

- _overlapTextureProgram(aBlock, sustainTime, transitionTime, overlap)_

Texture generator.
Answer a `TextureProgram`,
constructing a the self-releasing envelope with attack and release times equal to _transitionTime_
and a sustain time equal to _sustainTime_.

When played,
the process runs at the interval _sustainTime + (transitionTime * 2) / overlap_,
so there will be at most _overlap_ number of instances of the sound playing together.

Texture of overlapping sine tones:

~~~
{
	{
		SinOsc(Rand(220, 990), 0)
	} ! 2 * 0.1
}.overlapTextureProgram(3, 3, 3)
~~~

The program below plays a simple texture of overlapping seven note chords, predominantly consisting of sine tones.
The two branches of the `if` clause are written as trailing blocks.

~~~
{
	{
		let freq = IRand(48, 72).MidiCps;
		(4 / 5).coin.if {
			SinOsc(freq, 0) * Rand(0.05, 0.1)
		} {
			Saw(freq) * Rand(0.01, 0.05)
		}
	} !^ 7 / 7
}.overlapTextureProgram(3, 3, 3)
~~~

The program below generates a simple texture, chords are generated by frequency shifting a sine tone:

~~~
{
	let oct = [36 48 60].atRandom;
	let note = [0 2 4 5 7 9 11].atRandom;
	let freq = (oct + note).MidiCps;
	let osc = SinOsc(freq, 0) * 0.1;
	let left = osc + FreqShift(
		osc,
		freq * 1.5,
		0
	);
	let right = FreqShift(
		left,
		SinOsc(3.23, 0) * 5,
		0
	);
	[left, right] / 3
}.overlapTextureProgram(3, 3, 3)
~~~

* * *

See also: collectTextureProgram, OverlapTexture, spawnTextureProgram, TextureProgram, xFadeTextureProgram

Guides: Texture Programs

Categories: Scheduling
